2025-05-14 16:05:49,378 - id_verification_api - ERROR - OpenAI API error: Error code: 401 - {'error': {'message': 'Incorrect API key provided: github_p*********************************************************************************rdjB. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-05-14 16:05:49,378 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: OpenAI API error: Error code: 401 - {'error': {'message': 'Incorrect API key provided: github_p*********************************************************************************rdjB. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-05-14 16:07:15,330 - id_verification_api - ERROR - OpenAI API error: publisher is required
2025-05-14 16:07:15,330 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: OpenAI API error: publisher is required
2025-05-14 16:09:07,965 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:09:07,965 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:13:10,148 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:13:10,149 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:13:26,222 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:13:26,223 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:14:05,081 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:14:05,083 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:15:07,189 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:15:07,189 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:15:42,004 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:15:42,005 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:17:55,331 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:17:55,331 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:20:03,739 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:20:03,739 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:26:33,961 - id_verification_api - ERROR - Invalid JSON format in request_data
2025-05-14 16:26:33,961 - id_verification_api - ERROR - HTTP error in /validate-id-card: 422: Invalid JSON format in request_data
2025-05-14 16:28:34,208 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:28:34,208 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:34:49,410 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:34:49,410 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:35:43,170 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:35:43,171 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:37:20,758 - id_verification_api - ERROR - Failed to parse OpenAI response: Expecting value: line 1 column 1 (char 0)
2025-05-14 16:37:20,758 - id_verification_api - ERROR - HTTP error in /validate-id-card: 500: Failed to parse model response as JSON.
2025-05-14 16:44:30,999 - id_verification_api - ERROR - Invalid JSON format in request_data
2025-05-14 16:44:30,999 - id_verification_api - ERROR - HTTP error in /validate-id-card: 422: Invalid JSON format in request_data
2025-05-14 17:12:53,351 - id_verification_api - ERROR - Invalid JSON format in id_info
2025-05-14 17:12:53,351 - id_verification_api - ERROR - HTTP error in /verify-id/: 422: Invalid JSON format in id_info
2025-05-14 17:13:26,077 - id_verification_api - ERROR - Invalid JSON format in request_data
2025-05-14 17:13:26,077 - id_verification_api - ERROR - HTTP error in /validate-id-card: 422: Invalid JSON format in request_data
2025-05-14 17:14:47,901 - id_verification_api - ERROR - Invalid JSON format in id_info
2025-05-14 17:14:47,901 - id_verification_api - ERROR - HTTP error in /verify-id/: 422: Invalid JSON format in id_info
2025-05-14 17:14:50,088 - id_verification_api - ERROR - Invalid JSON format in id_info
2025-05-14 17:14:50,088 - id_verification_api - ERROR - HTTP error in /verify-id/: 422: Invalid JSON format in id_info
2025-05-14 17:18:47,605 - id_verification_api - INFO - OpenAI API response: ChatCompletion(id='chatcmpl-BX4tBNmI5OFdJ2grPHhXIST4vXVw8', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```json\n{\n  "is_verified": false,\n  "details": "The name \'Chaithanya K.\' matched the provided information and was extracted from the front image. The organization \'ST JOSEPH ENGINEERING COLLEGE\' from the front and back images does not match the provided organization \'Example University\'. The provided ID number \'123s4567A89\' could not be found on the ID card; the closest identifier (\'USN: 4S021CB012\') was extracted from the front image. The type is correctly identified as \'College ID\' from the context. However, the date of birth \'06-11-2003\' from the back image does not match the provided date of birth \'01-01-2003\'.",\n  "confidence": 0.88\n}\n```', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None), content_filter_results={'hate': {'filtered': False, 'severity': 'safe'}, 'protected_material_code': {'filtered': False, 'detected': False}, 'protected_material_text': {'filtered': False, 'detected': False}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}})], created=1747223317, model='gpt-4o', object='chat.completion', service_tier=None, system_fingerprint='fp_ee1d74bde0', usage=CompletionUsage(completion_tokens=166, prompt_tokens=2646, total_tokens=2812, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)), prompt_filter_results=[{'prompt_index': 0, 'content_filter_result': {'jailbreak': {'filtered': False, 'detected': False}, 'custom_blocklists': {'filtered': False, 'details': []}}}, {'prompt_index': 2, 'content_filter_result': {'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}, 'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'custom_blocklists': {'filtered': False, 'details': []}}}, {'prompt_index': 1, 'content_filter_result': {'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}, 'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'custom_blocklists': {'filtered': False, 'details': []}}}])
2025-05-14 17:20:41,268 - id_verification_api - INFO - OpenAI API response: ChatCompletion(id='chatcmpl-BX4v958J5hiR4aV6HahNxUBtbohfx', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```json\n{\n  "is_verified": true,\n  "details": "All fields (name, ID number, organization, type, and date of birth) matched the provided information. Name, ID number, and organization were extracted from the front image. Date of birth was extracted from the back image.",\n  "confidence": 0.98\n}\n```', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None), content_filter_results={'hate': {'filtered': False, 'severity': 'safe'}, 'protected_material_code': {'filtered': False, 'detected': False}, 'protected_material_text': {'filtered': False, 'detected': False}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}})], created=1747223439, model='gpt-4o', object='chat.completion', service_tier=None, system_fingerprint='fp_ee1d74bde0', usage=CompletionUsage(completion_tokens=73, prompt_tokens=2651, total_tokens=2724, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)), prompt_filter_results=[{'prompt_index': 0, 'content_filter_result': {'jailbreak': {'filtered': False, 'detected': False}, 'custom_blocklists': {'filtered': False, 'details': []}}}, {'prompt_index': 2, 'content_filter_result': {'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}, 'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'custom_blocklists': {'filtered': False, 'details': []}}}, {'prompt_index': 1, 'content_filter_result': {'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}, 'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'custom_blocklists': {'filtered': False, 'details': []}}}])
